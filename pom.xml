<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.dodo.project.base</groupId>
        <artifactId>dodo-project-base</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>com.dodo.project.base.admin</groupId>
    <artifactId>dodo-project-base-admin</artifactId>
    <!--<packaging>war</packaging>-->
    <description>基础后台模块</description>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
    </properties>

    <dependencies>
        <!-- start JSP支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- start 用户编译jsp-->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
        </dependency>
        <!-- end 用户编译jsp-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <!-- end jsp支持 -->

        <!-- start 依赖基础组件dao层 -->
        <dependency>
            <groupId>com.dodo.project.base.admin.dao</groupId>
            <artifactId>dodo-project-base-admin-dao</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- end 依赖基础组件dao层 -->

        <!-- start 依赖基础组件web层 -->
        <dependency>
            <groupId>com.dodo.project.base.web</groupId>
            <artifactId>dodo-project-base-web</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- end 依赖基础组件web层 -->

        <!-- start 依赖基础组件权限控制 -->
        <dependency>
            <groupId>com.dodo.project.base.permissions</groupId>
            <artifactId>dodo-base-permissions</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- end 依赖基础组件权限控制 -->

        <!-- start 依赖库组件验证码模块 -->
        <dependency>
            <groupId>com.github.penggle</groupId>
            <artifactId>kaptcha</artifactId>
            <version>2.3.2</version>
        </dependency>
        <!-- end 依赖库组件验证码模块 -->

        <!-- start Spring 官方提供的热部署插件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
        <!-- end Spring 官方提供的热部署插件 &ndash;&gt;-->

        <!--start dodo redis -->
        <dependency>
            <groupId>com.dodo.project.base.cache.redis</groupId>
            <artifactId>dodo-project-base-redis</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- end dodo redis-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-properties-migrator</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <!-- 添加hibernate-validator 依赖-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.0.16.Final</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <resources>
            <resource>
                <!-- 指定resources插件处理哪个目录下的资源文件 -->
                <directory>src/main/webapp</directory>
                <!--注意此次必须要放在此目录下才能被访问到-->
                <targetPath>META-INF/resources</targetPath>
                <includes>
                    <include>**/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/**</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <!--<resource>
                <directory>static</directory>
                <targetPath>static</targetPath>
            </resource>-->
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                &lt;!&ndash;<version>1.4.2.RELEASE</version>&ndash;&gt;
                <configuration>
                    &lt;!&ndash; 帮助定义构件输出的一些附属构件,附属构件与主构件对应，有时候需要加上classifier才能唯一的确定该构件 不能直接定义项目的classifer,因为附属构件不是项目直接默认生成的，而是由附加的插件帮助生成的 &ndash;&gt;
                    <mainClass>com.dodo.project.base.admin.Application</mainClass>
                    <classifier>exec</classifier>
                    <addResources>true</addResources>
                    <excludeDevtools>true</excludeDevtools>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- 排除创建的不可执行的jar包 -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>exec</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                           <!-- Need this to ensure application.yml is excluded -->
                            <forceCreation>true</forceCreation>
                            <excludes>
                                <exclude>application.yml</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>